# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CustomImage(Model):
    """A custom image.

    :param vm:
    :type vm: ~azure.mgmt.devtestlabs.models.CustomImagePropertiesFromVm
    :param vhd: The VHD from which the image is to be created.
    :type vhd: ~azure.mgmt.devtestlabs.models.CustomImagePropertiesCustom
    :param description: The description of the custom image.
    :type description: str
    :param os_type: The OS type of the custom image. Possible values include:
     'Windows', 'Linux', 'None'
    :type os_type: str or ~azure.mgmt.devtestlabs.models.CustomImageOsType
    :param author: The author of the custom image.
    :type author: str
    :param creation_date: The creation date of the custom image.
    :type creation_date: datetime
    :param provisioning_state: The provisioning status of the resource.
    :type provisioning_state: str
    :param id: The identifier of the resource.
    :type id: str
    :param name: The name of the resource.
    :type name: str
    :param type: The type of the resource.
    :type type: str
    :param location: The location of the resource.
    :type location: str
    :param tags: The tags of the resource.
    :type tags: dict[str, str]
    """

    _attribute_map = {
        'vm': {'key': 'properties.vm', 'type': 'CustomImagePropertiesFromVm'},
        'vhd': {'key': 'properties.vhd', 'type': 'CustomImagePropertiesCustom'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'os_type': {'key': 'properties.osType', 'type': 'str'},
        'author': {'key': 'properties.author', 'type': 'str'},
        'creation_date': {'key': 'properties.creationDate', 'type': 'iso-8601'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(self, *, vm=None, vhd=None, description: str=None, os_type=None, author: str=None, creation_date=None, provisioning_state: str=None, id: str=None, name: str=None, type: str=None, location: str=None, tags=None, **kwargs) -> None:
        super(CustomImage, self).__init__(**kwargs)
        self.vm = vm
        self.vhd = vhd
        self.description = description
        self.os_type = os_type
        self.author = author
        self.creation_date = creation_date
        self.provisioning_state = provisioning_state
        self.id = id
        self.name = name
        self.type = type
        self.location = location
        self.tags = tags
