# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.python2_package_operations import Python2PackageOperations
from .operations.runbook_draft_operations import RunbookDraftOperations
from .operations.runbook_operations import RunbookOperations
from .operations.test_job_streams_operations import TestJobStreamsOperations
from .operations.test_job_operations import TestJobOperations
from . import models


class AutomationClientConfiguration(AzureConfiguration):
    """Configuration for AutomationClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: Gets subscription credentials which uniquely
     identify Microsoft Azure subscription. The subscription ID forms part of
     the URI for every service call.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if subscription_id is None:
            raise ValueError("Parameter 'subscription_id' must not be None.")
        if not base_url:
            base_url = 'https://management.azure.com'

        super(AutomationClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-mgmt-automation/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials
        self.subscription_id = subscription_id


class AutomationClient(SDKClient):
    """Automation Client

    :ivar config: Configuration for client.
    :vartype config: AutomationClientConfiguration

    :ivar python2_package: Python2Package operations
    :vartype python2_package: azure.mgmt.automation.operations.Python2PackageOperations
    :ivar runbook_draft: RunbookDraft operations
    :vartype runbook_draft: azure.mgmt.automation.operations.RunbookDraftOperations
    :ivar runbook: Runbook operations
    :vartype runbook: azure.mgmt.automation.operations.RunbookOperations
    :ivar test_job_streams: TestJobStreams operations
    :vartype test_job_streams: azure.mgmt.automation.operations.TestJobStreamsOperations
    :ivar test_job: TestJob operations
    :vartype test_job: azure.mgmt.automation.operations.TestJobOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: Gets subscription credentials which uniquely
     identify Microsoft Azure subscription. The subscription ID forms part of
     the URI for every service call.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = AutomationClientConfiguration(credentials, subscription_id, base_url)
        super(AutomationClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '3123-32-32'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.python2_package = Python2PackageOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.runbook_draft = RunbookDraftOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.runbook = RunbookOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.test_job_streams = TestJobStreamsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.test_job = TestJobOperations(
            self._client, self.config, self._serialize, self._deserialize)
